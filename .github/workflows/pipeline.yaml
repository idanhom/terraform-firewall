name: Terraform CI/CD

# todo: set up service principal
# https://chatgpt.com/g/g-64TtL1keg-devops-mentor/c/676261ab-d384-800b-9161-f696e6371698

# add tflint
# https://github.com/terraform-linters/tflint?tab=readme-ov-file#github-actions

# add terraform-docs?
# https://github.com/terraform-docs/terraform-docs/

on:
  push:
    branches: [main, 'fix-**', 'feature/**']
  pull_request:
    branches: [main, 'fix-**', 'feature/**']
  workflow_dispatch:
  issues:
    types:
      - opened
      - edited
      - closed

permissions:
  id-token: write
  contents: read

jobs:
  log-issues:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Output issue event data
        run: echo '${{ toJSON(github.event) }}'

  lint-validate:
    runs-on: ubuntu-latest
    environment: azure-deployment # Link to environment for Federated Identity Credential

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ~>1.9.8

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: lint-validate
    environment: azure-deployment # Link to environment for Federated Identity Credential

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ~>1.9.8 

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false -out=plan.out

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tf-plan
          path: plan.out

  apply:
    runs-on: ubuntu-latest
    environment: azure-deployment # Link to environment for Federated Identity Credential
    needs: plan

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


      - name: Set Terraform Environment Variables
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ~>1.9.8

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false