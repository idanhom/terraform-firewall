name: Terraform CI/CD

# add dependency caching
# see guide 73-75 \OneDrive - Redeploy AB\Documents\Knowledge Nexus\01 Project\Learnings\GitHub Actions\Udemy\V1\Section 5. Job Artifacts and Outputs

on:
  push:
    branches: [main, 'dev-**', 'feature/**']
  pull_request:
    branches: [main, 'dev-**', 'feature/**']
  workflow_dispatch:
  issues:
    types:
      - opened
      - edited
      - closed

jobs:
  log-issues:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Output issue event data
        run: echo '${{ toJSON(github.event) }}'

  lint-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ~>1.9

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: lint-validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false -out=plan.out

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tf-plan
          path: plan.out

  apply:
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ~>1.9

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false